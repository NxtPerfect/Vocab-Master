@use 'sass:color';

$text: #ebf8f7;
$background: #030a09;
$primary: #98dcdb;
$secondary: #2c3882;
$accent: #6a55c6;
$border-radius: 1svw;

@media (prefers-color-scheme: light) {
  $text: #071312;
  $background: #f4fbfb;
  $primary: #236764;
  $secondary: #7e89d3;
  $accent: #4e39ac;
}

@media (prefers-reduced-motion: no-preference) {
  :has(:target) {
    scroll-behavior: smooth;
    scroll-padding-top: 3rem;
  }
}

@mixin betterButton($width, $height, $bg, $color, $bg-alt, $color-alt) {
  width: $width;
  height: $height;
  background-color: $bg;
  color: $color;
  border-radius: 100vw;
  border: 0;
  transition: color 0.1s linear, background-color 0.1s linear;

  &:focus,
  &:hover {
    background-color: $bg-alt;
    color: $color-alt;
    cursor: pointer;
  }

  &:active {
    background-color: color.scale($bg-alt, $lightness: 20%);
    color: color.scale($color-alt, $lightness: 20%);
  }

  &:disabled {
    background-color: color.scale($bg, $blackness: 30%);
    cursor: wait;

    &:hover {
      color: $color;
    }
  }
}

@keyframes move-blob {
  0% {
    rotate: 0deg;
    left: -100%;
    top: -20%;
    aspect-ratio: 1.35;
    opacity: 1;
  }

  25% {
    rotate: -20deg;
    aspect-ratio: 1.8;
    opacity: 0.6;
  }

  50% {
    rotate: 40deg;
    left: 100%;
    top: 25%;
    aspect-ratio: 1.35;
    opacity: 1;
  }

  75% {
    rotate: 120deg;
    aspect-ratio: 1.6;
    opacity: 0.6;
  }

  100% {
    rotate: -120deg;
    left: -100%;
    top: 70%;
    aspect-ratio: 1.35;
    opacity: 1;
  }
}

@keyframes slide-left {
  from {
    opacity: 0;
    left: -100%;
  }

  to {
    opacity: 1;
    left: 0;
  }
}

@keyframes show-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

* {
  min-width: 0;
  margin: 0;
  z-index: 1;
  background-color: $background;
  color: $text;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

:root {
  display: flex;
  flex-direction: column;
}

.disabled {
  color: #a0a0a0;
  height: 2rem;
  text-align: center;
  line-height: 2rem;
}

main {
  overflow: hidden;
  display: grid;

  @media screen and (max-width: 900px) {
    display: flex;
    flex-direction: column;
    gap: 8rem;
    padding: 1rem;
  }

  grid-template-columns: 1fr 1fr;
  justify-items: center;
  align-content: center;
  gap: 3rem;
  padding: 3rem 0;
  // background: linear-gradient(rgba(0,0,0,0.1), rgba(0,0,0,0));
  background: linear-gradient(125deg, color.scale($primary, $lightness: -50%) 0%, $background 50%, color.scale($secondary, $lightness: -25%));
  background-repeat: no-repeat;
  animation: move-bg 2s ease-in infinite alternate-reverse;
  z-index: -1;
  min-height: 66svh;

  * {
    z-index: 1;
  }

  .language_section,
  .language_section:nth-of-type(2n) {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: center;
    background-color: $secondary;
    padding: .5rem 1.2rem;
    padding-bottom: 2.5rem;
    border-radius: $border-radius;
    width: 40svw;

    @media screen and (max-width: 900px) {
      width: 80svw;
    }

    transition: color 0.1s linear;
    box-shadow: 0 2svh 1svw -1svw color.adjust($secondary, $alpha: -0.4);
    animation: slide-left 0.5s ease-out;


    .link {
      color: $primary;
      background: $secondary;

      &:hover,
      &:focus {
        cursor: pointer;
        color: $accent;
        // transition: color 0.1s linear;
      }

      button {
        @include betterButton(10rem, 2rem, $primary, $background, $secondary, $text);
        font-weight: 600;
        font-size: 1.1rem;
      }
    }

    .language_section_top {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;
      background-color: $secondary;
      padding: 1rem;
      gap: .5rem;

      h1 {
        text-transform: capitalize;
        background-color: $secondary;
      }

      button {
        @include betterButton(1.5rem, 1.5rem, $primary, $background, $accent, $text);
        padding: 0;
        transition: background-color 0.1s linear;

        &:hover>.icon,
        &:active>.icon {

          path {
            stroke: $text;
            background-color: transparent;
            transition: color 0.1s linear;
          }
        }


        .icon {
          background-color: transparent;
          transition: background-color 0.1s linear;
        }

        .icon>path {
          stroke: $secondary;
          transition: color 0.1s linear;
          stroke-width: 4px;
        }
      }

    }


    .language_levels_wrapper {
      display: flex;
      flex-direction: row;

      @media screen and (max-width: 900px) {
        flex-direction: column;
        height: 80svh;
      }

      justify-content: space-evenly;
      align-items: center;
      width: max(100%, 8rem);
      height: max(30svh, 8rem);
      min-height: 2rem;
      max-height: 40rem;
      background-color: $accent;
      border-radius: $border-radius;
      gap: 2rem;


      .language_level {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        background-color: inherit;
        box-shadow: black 0 1svh 2svh;
        height: 100%;
        width: 100%;
        border-radius: $border-radius;
        transition: box-shadow 0.1s ease-in;

        &:hover {
          box-shadow: inset white 0 0 .5rem, black 0 1svh 2svh;
          transition: box-shadow 0.1s ease-in;
        }

        a,
        p,
        h3 {
          background-color: inherit;
        }

        .progress_bar_container {
          border-radius: $border-radius;
          background-color: $background;
          min-width: max(2rem, 8svw);
          max-width: 20rem;
          height: 0.6rem;

          @media screen and (max-width: 900px) {
            width: 60svw;
          }

          .progress_bar {
            border-radius: $border-radius;
            background-color: $text;
            height: 100%;
            transition: all .25s ease-out;
          }
        }

      }
    }
  }

  .language_section:nth-of-type(2n) {
    background-color: $primary;
    box-shadow: 0 2svh 1svw -1svw color.adjust($primary, $alpha: -0.4);


    .language_section_top {
      background-color: $primary;

      h1 {
        background-color: $primary;
        color: $background;
      }

      button {
        @include betterButton(1.5rem, 1.5rem, $secondary, $background, $accent, $text);
        padding: 0;
        transition: background-color 0.1s linear;

        &:hover>.icon,
        &:active>.icon {

          // transition: background-color 0.1s linear;
          path {
            stroke: color.scale($text, $lightness: 20%);
            transition: color 0.1s linear;
          }
        }

        .icon {
          background-color: transparent;
        }

        .icon>path {
          stroke: $text;
          stroke-width: 4px;
        }
      }
    }

    .language_levels_wrapper {
      background-color: $secondary;

      .language_level {
        background-color: inherit;

        .link {
          color: $text;
          background: $secondary;
          transition: background-color 0.1s linear;

          &:hover,
          &:focus {
            cursor: pointer;
            color: $accent;
            // transition: color 0.1s linear;
          }

          button {
            @include betterButton(10rem, 2rem, $accent, $text, $primary, $background);
            font-weight: 600;
            font-size: 1.1rem;
          }
        }
      }
    }
  }

  .flashcard-closed,
  .flashcard-open {
    position: relative;
    display: flex;
    flex-direction: column;
    grid-column: span 2;

    @media screen and (max-width: 900px) {
      width: 90svw;
      height: 75svh;
    }

    width: 50%;

    aspect-ratio: 1.7;
    justify-content: space-evenly;
    align-items: center;
    background-color: $accent;
    text-align: center;
    border-radius: $border-radius;
    box-shadow: $primary 0 4svh 4svh -1.5svw;
    font-size: 1.25rem;
    animation: slide-left 0.25s ease-out;

    .flashcard-top,
    p {
      background-color: inherit;

      * {
        background-color: inherit;
      }
    }

    button {
      @media screen and (max-width: 900px) {
        height: 7svh;
        width: 65svw;
        font-size: 1.45rem;
      }

      @include betterButton(10rem, 2rem, $secondary, $text, $primary, $background);
      font-size: 1.25rem;
      font-weight: 400;
    }

    .flashcard-top {
      padding: 1rem;
      height: 15svh;
      line-height: 7.5svh;

      @media screen and (max-width: 900px) {
        font-size: 1.25rem;
      }

      span {
        padding: 0 2rem;
      }

      .flashcard-words {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        align-items: center;
      }
    }

    .flashcard-buttons {
      display: flex;
      flex-direction: row;
      justify-content: space-around;
      align-items: center;

      @media screen and (max-width: 900px) {
        width: 75svw;
        gap: 2rem;
      }

      width: 40%;
      background: none;

      .flashcard-button-correct {
        @media screen and (max-width: 900px) {
          height: 7svh;
          width: 35svw;
          font-size: 1.25rem;
        }

        box-shadow: lightgreen 0 .5rem 2rem .05rem;

        &:hover {
          background-color: lightgreen;
          color: black;
        }
      }

      .flashcard-button-wrong {
        @media screen and (max-width: 900px) {
          height: 7svh;
          width: 35svw;
          font-size: 1.25rem;
        }

        box-shadow: red 0 .5rem 2rem .05rem;

        &:hover {
          background-color: red;
          color: black;
        }
      }
    }


    .flashcard-words-left {
      margin: 0;
      background: none;

      p {
        i {
          background: none;
        }

        i:nth-child(1) {
          background: none;
          color: color.adjust(color.adjust(lightgreen, $lightness: -15%), $whiteness: 5%);
        }

        i:nth-child(2) {
          background: none;
          color: color.adjust(color.adjust(red, $lightness: 15%), $whiteness: 15%);
        }

        .active {
          text-decoration: underline;
          text-underline-offset: .2rem;
        }
      }
    }

  }
}

form {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  background-color: $accent;
  border-radius: $border-radius;
  padding: 2rem 0;
  margin: auto;
  grid-column: span 2;

  @media screen and (max-width: 900px) {
    width: 90svw;
    height: 70svh;
  }

  width: max(35svw, 25rem);
  height: max(30svh, 15rem);

  label {
    background-color: inherit;
  }

  h1 {
    background-color: inherit;
  }

  input {
    border: 0;
    border-radius: $border-radius;
    background-color: $secondary;
    padding: .5rem;

    @media screen and (max-width: 900px) {
      height: 5svh;
      font-size: .9rem;
    }

    &:disabled {
      background-color: color.grayscale($secondary);
      cursor: not-allowed;
    }
  }

  button,
  a {
    @media screen and (max-width: 900px) {
      height: 6svh;
      width: 25svh;
      font-size: 1.25rem;
    }

    @include betterButton(10rem, 2rem, $primary, $background, $secondary, $text);
    font-size: 1rem;
    font-weight: bold;
  }

  .error-msg {
    color: #f00000;
    background-color: $accent;
    font-weight: 700;
    font-size: 14pt;
  }
}

nav {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  padding: 2svh 1svw;
  // padding: 1.2rem .5rem;
  background-color: $primary;

  * {
    background-color: $primary;
  }

  h1 {
    color: $secondary;

    @media screen and (max-width: 900px) {
      font-size: 1.25rem;
    }

    font-size: 2rem;
    text-decoration: underline;
    text-decoration-thickness: .2rem;
  }

  .nav_buttons {
    display: flex;
    flex-direction: row;

    @media screen and (max-width: 900px) {
      flex-direction: column;
      gap: 2rem;
    }

    justify-content: space-between;
    align-items: center;
    background-color: $primary;

    .link {
      margin: 0 1rem;
      text-decoration: none;
      color: $accent;
      font-size: 1.25rem;
      transition: background-color 0.1s linear;

      &:hover,
      &:active {
        cursor: $primary;
        color: $secondary;
        // transition: color 0.1s linear;
      }

      &:active {
        color: color.scale($secondary, $lightness: 20%);
      }
    }

    .login {
      background-color: $text;
      color: $secondary;
      border-radius: $border-radius;
      padding: .25rem .5rem;
      transition: color 0.1s linear, background-color 0.1s linear;

      &:hover,
      &:active {
        background-color: $secondary;
        color: $text;
        // transition: background-color 0.1s linear;
      }

      &:active {
        background-color: color.scale($secondary, $lightness: 20%);
      }
    }

    .register {
      background-color: $secondary;
      color: $text;
      border-radius: $border-radius;
      padding: .25rem .5rem;
      transition: color 0.1s linear, background-color 0.1s linear;

      &:hover,
      &:active {
        background-color: $text;
        color: $secondary;
        // transition: color 0.1s linear, background-color 0.1s linear;
      }

      &:active {
        background-color: color.scale($text, $lightness: -10%);
      }
    }

    button {
      @media screen and (max-width: 900px) {
        height: 5svh;
        width: 35svw;
        font-size: 1.25rem;
      }

      @include betterButton(5rem, 1.5rem, $secondary, $text, $accent, $text);
      margin: 0 1rem;

    }
  }
}

footer {
  position: relative;
  z-index: 0;
  display: grid;
  justify-content: center;
  align-items: center;
  text-align: center;
  grid-template-columns: 1fr 1fr 1fr;
  background-color: $secondary;
  // padding: 5rem 0;
  padding: 5svh 0;
  margin: 0;

  * {
    background-color: inherit;
  }

  .footer_center {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    * {
      margin: .5rem;
    }

    .link {
      color: color.scale($background, $lightness: 70%);
      transition: color 0.1s linear;

      &:hover,
      &:active {
        color: $background;
        // transition: color 0.1s linear;
      }

      &:active {
        color: color.scale($primary, $lightness: 10%);
        // transition: color 0.1s linear;
      }
    }
  }
}

@keyframes spin {
  from {
    rotate: 0deg;
  }

  to {
    rotate: 360deg;
  }
}

.spinner {
  position: relative;
  left: -0.5rem;
  background-color: transparent;
  animation: spin ease-in-out infinite 1.5s;
}

.blob {
  position: fixed;
  z-index: 0;
  width: 40rem;
  aspect-ratio: 1.35;
  border-radius: 50%;
  background-image: linear-gradient(lightpink, lightblue);
  animation: move-blob 20s infinite ease-in-out forwards alternate-reverse;
  filter: blur(70rem) contrast(1);
}

.page-not-found {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  background-color: transparent;
  grid-column: span 2;
  height: 100%;

  h1 {
    margin: 1rem;
  }

  * {
    background-color: transparent;
    grid-column: span 2;
    margin: 0.25rem;
  }

  a {
    transition: color 0.1s linear;
  }

  a:hover {
    color: $primary;
  }

  a:active {
    color: color.adjust($primary, $lightness: 10%);
  }
}

.modal-blocker {
  position: fixed;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 99;
  background-color: color.adjust(black, $alpha: -0.4);
  backdrop-filter: blur(10px);
  height: 100svh;
  width: 100svw;
  top: 0;
  left: 0;
  animation: show-in 0.05s linear;

  div>* {
    margin: 2rem 1rem;
  }


  .modal-blocker-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    border-radius: $border-radius;
    background-color: $accent;

    @media screen and (max-width: 900px) {
      max-width: 100svw;
      aspect-ratio: .75;
    }

    max-width: 50svw;
    aspect-ratio: 1.5;

    h2,
    div {
      background-color: inherit;
      color: $text;
    }

    div {
      @media screen and (max-width: 900px) {
        display: flex;
        flex-direction: row;
      }
    }

    .modal-ok {
      @media screen and (max-width: 900px) {
        width: 45svw;
      }

      &:hover {
        background-color: color.adjust(red, $lightness: 20%);
      }
    }

    .modal-cancel {
      background-color: $primary;
      color: $background;

      @media screen and (max-width: 900px) {
        width: 45svw;
      }

      &:hover {
        background-color: lightgreen;
      }
    }
  }
}
